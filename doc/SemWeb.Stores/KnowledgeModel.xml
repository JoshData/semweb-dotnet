<Type Name="KnowledgeModel" FullName="SemWeb.Stores.KnowledgeModel">
  <TypeSignature Language="C#" Value="public class KnowledgeModel : SemWeb.Store" />
  <AssemblyInfo>
    <AssemblyName>SemWeb</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SemWeb.Store</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnowledgeModel ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs a new empty KnowledgeModel.</summary>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnowledgeModel (SemWeb.RdfReader parser);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="parser" Type="SemWeb.RdfReader" />
      </Parameters>
      <Docs>
        <param name="parser">A parser containing statements to load into the memory store.</param>
        <summary>Creates a new KnowledgeModel, adds to it a <see cref="T:SemWeb.Stores.MemoryStore" />, and loads in the statements from the given reader.</summary>
        <remarks>This is a convenience function.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (SemWeb.Store storage);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storage" Type="SemWeb.Store" />
      </Parameters>
      <Docs>
        <param name="storage">The store to add into the model.</param>
        <summary>Adds a store into the KnowledgeModel.</summary>
        <remarks>
          <para>The statements in <paramref name="store" /> become available through calls to this KnowledgeModel's select and contains methods.</para>

<para>The store should have been created passing this KnowledgeModel to its constructor so that the store is associated with this KnowledgeModel.</para></remarks>
      </Docs>
    </Member>
    
    <Member MemberName="Storage">
      <MemberSignature Language="C#" Value="public SemWeb.Stores.MultiStore Storage { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>SemWeb.Stores.MultiStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The MultiStore that maintains the list of stores within this KnowledgeModel.</summary>
        <value>The list of stores within this KnowledgeModel.</value>
        <remarks>
          <para>It is safe to manipulate the object returned by this property to change the stores associated with the KnowledgeModel.</para>
<para>Calls to Contains and Select on the MultiStore reflect the contents of the stores contained in it without the application of the KnowledgeModel's inference engines.</para></remarks>
      </Docs>
    </Member>
    
  <Member MemberName="AddReasoning">
      <MemberSignature Language="C#" Value="public void AddReasoning (SemWeb.Reasoning.ReasoningEngine engine);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="engine" Type="SemWeb.Reasoning.ReasoningEngine" />
      </Parameters>
      <Docs>
        <param name="engine">The reasoning engine.</param>
        <summary>Adds a reasoning engine to the KnowledgeModel.</summary>
        <remarks>Select calls on this store will now return statements filtered by the reasoning engine.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>A store for combining multiple stores and inference engines.</summary>
    <remarks>None.</remarks>
  </Docs>
</Type>
