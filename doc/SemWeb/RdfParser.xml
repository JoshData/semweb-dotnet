<Type Name="RdfParser" FullName="SemWeb.RdfParser">
  <TypeSignature Language="C#" Value="public abstract class RdfParser : System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>SemWeb</AssemblyName>
    <AssemblyVersion>1.0.1915.28028</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RdfParser ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>The protected no-arg constructor used by derived classes.</summary>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public abstract void Parse (SemWeb.Store storage);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storage" Type="SemWeb.Store" />
      </Parameters>
      <Docs>
        <param name="storage">The store into which statements will be added.</param>
        <summary>Parses the stream into a store.</summary>
        <remarks>Though this method may be called directly, it is more efficient to use <see cref="M:SemWeb.Store.Import(SemWeb.RdfParser)" /> which prepares the store for receiving many statements at once.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the parser.</summary>
        <remarks>The resources associated with the parser are freed.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SemWeb.RdfParser Create (string type, string source);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>SemWeb.RdfParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The stream type.</param>
        <param name="source">The name of the source stream, as a file name, or "-" for standard input.</param>
        <summary>Creates a parser in the factory paradigm.</summary>
        <returns>
          <para>The type of parser returned is given in the following table.</para>

<list type="table">
  <listheader>
    <term>
                <paramref name="type" />
              </term>
    <description>Parser</description>
  </listheader>
  <item>
    <term>"xml" or "text/xml"</term>
    <description>
                <see cref="T:SemWeb.IO.RdfXmlParser" />
              </description>
  </item>
  <item>
    <term>"n3" or "text/n3"</term>
    <description>
                <see cref="T:SemWeb.IO.N3Parser" />
              </description>
  </item>
</list></returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="Meta">
      <MemberSignature Language="C#" Value="public SemWeb.Entity Meta { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>SemWeb.Entity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An entity to assign as the meta entity for statements loaded by this parser.</summary>
        <value>An entity to use for meta information, or <see langword="null" />.</value>
        <remarks>The value of this property is used as the meta argument in calls to <see cref="C:SemWeb.Statement(SemWeb.Entity,SemWeb.Entity,SemWeb.Resource,SemWeb.Entity)" />.  The use of <see cref="P:SemWeb.Statement.Meta" /> is up to the application.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public string BaseUri { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The base URI for resolving relative URIs found in the stream.</summary>
        <value>The base URI for resolving relative URIs found in the stream.  May be, and is initially, <see langword="null" />.  </value>
        <remarks>When this property is <see langword="null" />, the parser may not be able to parse streams containing relative URIs.</remarks>
      </Docs>
    </Member>
  <Member MemberName="OnWarning">
      <MemberSignature Language="C#" Value="protected void OnWarning (string message);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="variables">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList variables;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Variables">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Variables { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>The base class of types that read statements from streams.</summary>
    <remarks>This is an abstract class. See the classes in <see cref="N:SemWeb.IO" /> for implementations of parsers.</remarks>
  </Docs>
</Type>
