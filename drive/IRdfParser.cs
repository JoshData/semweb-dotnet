/*****************************************************************************
 * IRdfParser.cs
 * 
 * Copyright (c) 2002, Rahul Singh.
 *  
 * This file is part of the Drive RDF Parser.
 * The Drive RDF Parser is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU Lesser General Public License as published 
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * The Drive RDF Parser is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with the Drive RDF Parser; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * 
 * Author: 
 * 
 * Rahul Singh
 * kingtiny@DriveRDF.org
 ******************************************************************************/

using System;
using System.Collections;
using System.IO;

namespace Drive.Rdf
{
	/// <summary>
	/// Represents an RDF Parser
	/// </summary>
	public interface IRdfParser
	{
		/// <summary>
		/// When implemented by a class, parses the RDF at the given URI, into an existing graph
		/// </summary>
		/// <param name="uri">The Uri of the document to parse</param>
		/// <param name="graph">An object that implements the IRdfGraph interface that will be used as the destination graph</param>
		/// <returns>An object that implements the IRdfGraph interface</returns>
		IRdfGraph ParseRdf(string uri, IRdfGraph graph);

		/// <summary>
		/// When implemented by a class, parses the RDF at the given URI
		/// </summary>
		/// <param name="uri">The Uri of the document to parse</param>
		/// <returns>An object that implements the IRdfGraph interface</returns>
		IRdfGraph ParseRdf(string uri);

		/// <summary>
		/// When implemented by a class, parses the RDF at the given URI, into an existing graph
		/// </summary>
		/// <param name="uri">The Uri of the document to parse</param>
		/// <param name="graph">An object that implements the IRdfGraph interface that will be used as the destination graph</param>
		/// <returns>An object that implements the IRdfGraph interface</returns>
		IRdfGraph ParseRdf(Uri uri, IRdfGraph graph);

		/// <summary>
		/// When implemented by a class, parses the RDF at the given URI
		/// </summary>
		/// <param name="uri">The Uri of the document to parse</param>
		/// <returns>An object that implements the IRdfGraph interface</returns>
		IRdfGraph ParseRdf(Uri uri);

		/// <summary>
		/// When implemented by a class, parses the RDF from a stream into an existing Graph
		/// </summary>
		/// <param name="inStream">The input stream for data</param>
		/// <param name="graph">An object that implements the IRdfGraph interface that will be used as the destination graph</param>
		/// <returns>An object that implements the IRdfGraph interface</returns>
		IRdfGraph ParseRdf(Stream inStream, IRdfGraph graph);

		/// <summary>
		/// When implemented by a class, parses the RDF from a stream
		/// </summary>
		/// <param name="inStream">The input stream for data</param>
		/// <returns>An object that implements the IRdfGraph interface</returns>
		IRdfGraph ParseRdf(Stream inStream);
		
		/// <summary>
		/// Indicates whether the parser should throw an exception and stop when it encounters an error
		/// </summary>
		bool StopOnErrors
		{
			get;
			set;
		}
		
		/// <summary>
		/// Indicates whether the parser should throw an exception and stop when it encounters a warning
		/// </summary>
		bool StopOnWarnings
		{
			get;
			set;
		}

		/// <summary>
		/// Represents a list of warning messages generated by the parser
		/// </summary>
		ArrayList Warnings
		{
			get;
		}

		/// <summary>
		/// Represents a list of error messages generated by the parser
		/// </summary>
		ArrayList Errors
		{
			get;
		}
	}
}
