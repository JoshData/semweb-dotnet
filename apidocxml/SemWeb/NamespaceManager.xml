<Type Name="NamespaceManager" FullName="SemWeb.NamespaceManager">
  <TypeSignature Language="C#" Value="public class NamespaceManager" />
  <AssemblyInfo>
    <AssemblyName>SemWeb</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.2</AssemblyVersion>
    <AssemblyVersion>1.0.7.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A class that maintains a mapping between namespace prefixes and URIs.</summary>
    <remarks>None.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamespaceManager ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Creates a new namespace manager.</summary>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamespaceManager (SemWeb.NamespaceManager parent);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="parent" Type="SemWeb.NamespaceManager" />
      </Parameters>
      <Docs>
        <param name="parent">Another namespace manager.</param>
        <summary>Creates a new namespace manager who will look in another namespace manager when it cannot find a matching prefix or URI.</summary>
        <remarks>When the new namespace manager cannot find a prefix or URI in its own table, it will consult <paramref name="parent" />'s table.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AddFrom">
      <MemberSignature Language="C#" Value="public void AddFrom (SemWeb.NamespaceManager nsmgr);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nsmgr" Type="SemWeb.NamespaceManager" />
      </Parameters>
      <Docs>
        <param name="nsmgr">The NamespaceManager to copy the declarations from.</param>
        <summary>Adds all of the namespace declarations from another NamespaceManager.</summary>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AddNamespace">
      <MemberSignature Language="C#" Value="public virtual void AddNamespace (string uri, string prefix);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">A URI.</param>
        <param name="prefix">A namespace prefix for the URI.</param>
        <summary>Adds a prefix-URI mapping to the table.</summary>
        <remarks>If <paramref name="prefix" /> was already used in a call to this method, the previous prefix-to-URI mapping will be overwritten.  Likewise, if <paramref name="uri" /> was used before, the previous uri-to-prefix mapping will be overwritten.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetNamespace (string prefix);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix to look up.</param>
        <summary>Returns the namespace associated with a prefix.</summary>
        <returns>The corresponding namespace, or <see langword="null" /> if the prefix is not in the table.</returns>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetNamespaces ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets all of the namespace URIs known to the namespace manager.</summary>
        <returns>A collection of all namespace URIs known to this namespace manager.</returns>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetPrefix (string uri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">A URI.</param>
        <summary>Gets the prefix associated with a namespace URI.</summary>
        <returns>The prefix associated with this namespace, or <see langword="null" /> if the URI is not associated with a prefix.</returns>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetPrefixes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetPrefixes ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets all of the prefixes known to the namespace manager.</summary>
        <returns>A collection of all prefixes known to this namespace manager.</returns>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual string Normalize (string uri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">A URI to normalize.</param>
        <summary>Normalizes a URI in N3 format.</summary>
        <returns>If a namespace matches part of this URI, a QName (prefix:localname) is returned.  Otherwise, the URI is returned in angled brackets (&lt;uri&gt;).</returns>
        <remarks>A QName will only be returned if the localname consists only of valid characters for a QName.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual bool Normalize (string uri, out string prefix, out string localname);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="prefix" Type="System.String&amp;" RefType="out" />
        <Parameter Name="localname" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uri">The URI to split.</param>
        <param name="prefix">This parameter is set to a namespace prefix.</param>
        <param name="localname">This parameter is set to a local name.</param>
        <summary>Splits a URI into a prefix and local name.</summary>
        <returns>True if the URI could be split into a prefix and local name, false otherwise.</returns>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public virtual string Resolve (string qname);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qname">A QName, e.g. "dc:title."</param>
        <summary>Converts a QName into a full URI.</summary>
        <returns>A URI equivalent to the QName.</returns>
        <remarks>The QName is split on its colon.  The prefix and colon are replaced by the namespace corresponding to the prefix.  An exception is thrown if the prefix is not known to the namespace manager.</remarks>
        <exception cref="T:System.ArgumentException">To be added; from: <see cref="M:SemWeb.NamespaceManager.Resolve(System.String)" />, <see cref="M:SemWeb.NamespaceManager.Resolve(System.String)" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
