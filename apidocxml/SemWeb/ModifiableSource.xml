<Type Name="ModifiableSource" FullName="SemWeb.ModifiableSource">
  <TypeSignature Language="C#" Value="public interface ModifiableSource : SemWeb.SelectableSource, SemWeb.StatementSink" />
  <AssemblyInfo>
    <AssemblyName>SemWeb</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.2</AssemblyVersion>
    <AssemblyVersion>1.0.7.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>SemWeb.SelectableSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>SemWeb.StatementSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>This interface is implemented by data sources that support modifying the contents of the store.</summary>
    <remarks>Operations including Clear, Replace, and Remove are specified by this interface.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the contents of the data store.</summary>
        <remarks>The data store is empty after a call to Clear.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (SemWeb.StatementSource source);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.StatementSource" />
      </Parameters>
      <Docs>
        <param name="source">The source whose statements will be added into the data store.</param>
        <summary>Loads the contents of a StatementSource into the data store.</summary>
        <remarks>This method wraps a call to <see cref="M:SemWeb.StatementSource.Select(SemWeb.StatementSink)" /> in store-specific code that prepares the store for receiving many statements.  The store may make itself locked for access by other processes to make the parsing faster.  To avoid this, call <see cref="M:SemWeb.StatementSource.Select(SemWeb.StatementSink)" /> directly.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (SemWeb.Statement template);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="SemWeb.Statement" />
      </Parameters>
      <Docs>
        <param name="template">A statement or statement template to remove from the data store.</param>
        <summary>Removes statements from the data store.</summary>
        <remarks>All statements in the data store that match <paramref name="template" /> are removed.  The <paramref name="template" /> argument is a template.  The non-<see langword="null" /> fields of <paramref name="template" /> are used as a filter on the statements in the store.  Statements that match the filter are removed.  <see langword="null" /> fields of <paramref name="template" /> are ignored during filtering.  Any field in <paramref name="template" /> (Subject, Predicate, Object, and Meta) may be <see langword="null" />.

<example><para>The following examples erase all statements in a store (although you should use <see cref="M:SemWeb.ModifiableSource.Clear()" />.</para><code lang="C#">store.Remove(new Statement(null, null, null));
store.Remove(Statement.All);</code></example></remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll (SemWeb.Statement[] templates);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templates" Type="SemWeb.Statement[]" />
      </Parameters>
      <Docs>
        <param name="templates">An array of statement templates.  Statement templates may contain a <see langword="null" /> subject, predicate, object, and/or meta.</param>
        <summary>Removes all statements matching an array of templates.</summary>
        <remarks>Stores may be more efficient removing statements in one call than through repeated calls to <see cref="M:SemWeb.ModifiableSource.Remove(SemWeb.Statement)" />.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (SemWeb.Entity find, SemWeb.Entity replacement);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="find" Type="SemWeb.Entity" />
        <Parameter Name="replacement" Type="SemWeb.Entity" />
      </Parameters>
      <Docs>
        <param name="find">The Entity to search for in the store.</param>
        <param name="replacement">The Entity to replace <paramref name="a" />.</param>
        <summary>Replaces all occurences of one Entity with another Entity.</summary>
        <remarks>All occurences of <paramref name="find" /> in statements in the store are replaced with references to <paramref name="replacement" />.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (SemWeb.Statement find, SemWeb.Statement replacement);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="find" Type="SemWeb.Statement" />
        <Parameter Name="replacement" Type="SemWeb.Statement" />
      </Parameters>
      <Docs>
        <param name="find">The statement to find.  This parameter must be a complete statement (with subject, predicate, and object non-null), not a template.</param>
        <param name="replacement">The statement that will replace the first statement.</param>
        <summary>Replaces a single statement with another statement.</summary>
        <remarks>Store implementations may choose to optimize this method over a call to Remove followed by Add.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
