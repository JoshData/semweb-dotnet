<Type Name="Entity" FullName="SemWeb.Entity">
  <TypeSignature Language="C#" Value="public class Entity : SemWeb.Resource" />
  <AssemblyInfo>
    <AssemblyName>SemWeb</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.2</AssemblyVersion>
    <AssemblyVersion>1.0.7.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SemWeb.Resource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>An entity resource in a graph.</summary>
    <remarks>
      <para>Entities can have URIs, or they can be anonymous, in which case their URI is <see langword="null" />.  However, in order to construct a blank node, use <c>new <see cref="T:SemWeb.BNode" />()</c>.</para>
      <para>Specialized stores will attach caching information to Entity objects to make interaction with the store faster.  It is therefore better to reuse existing Entity objects where possible.</para>
      <para>The == and != operators have been overloaded for entities.  Two named entities are equal when they both have the same URI.  Two anonymous Entity objects are equal if they were created by the same Store and were assigned the same resource key.</para>
      <para>An implicit conversion operator is defined from strings to entities.  The operator converts the string to an entity by returning an entity with that URI.</para>
      <example>
        <para>The following examples all create entities.</para>
        <code lang="C#">Entity thing1 = new Entity("http://www.example.com/#thing");
Entity thing2 = "http://www.example.com/#thing"; // operator overload
Entity thing3 = (Entity)"http://www.example.com/#thing"; // operator overload with explicit cast

Console.WriteLine(thing1.Uri)</code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Entity (string uri);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The URI of the entity.</param>
        <summary>Constructs a new entity with the given URI.</summary>
        <remarks>
          <paramref name="uri" /> may not be <see langword="null" />.  To construct a blank node, use <c>new <see cref="C:SemWeb.BNode()" /></c>.</remarks>
        <exception cref="T:System.ArgumentException">To be added; from: <see cref="M:SemWeb.Entity.#ctor(System.String)" /></exception>
        <exception cref="T:System.ArgumentNullException">To be added; from: <see cref="M:SemWeb.Entity.#ctor(System.String)" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (SemWeb.Entity a, SemWeb.Entity b);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SemWeb.Entity" />
        <Parameter Name="b" Type="SemWeb.Entity" />
      </Parameters>
      <Docs>
        <param name="a">An entity.</param>
        <param name="b">An entity.</param>
        <summary>Tests whether two entities are equal.</summary>
        <returns>
          <para>If both parameters are <see langword="null" />, the operator returns true.</para>
          <para>Otherwise, the operator returns true if the two entities are the same instance, or if their URIs are equal.</para>
        </returns>
        <remarks>
          <para>Two anonymous entities are not equal unless they are the same instance, or if they represent the same resource and were created by the same store.</para>
          <para>Note that the <see cref="T:SemWeb.Resource" /> class does not have an equality operator, so you must be comparing two variables typed as Entity to use this operator.</para>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static SemWeb.Entity op_Implicit (string uri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>SemWeb.Entity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">A URI.</param>
        <summary>Implicitly converts a string URI to an entity.</summary>
        <returns>An entity whose URI is <paramref name="uri" />.</returns>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (SemWeb.Entity a, SemWeb.Entity b);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SemWeb.Entity" />
        <Parameter Name="b" Type="SemWeb.Entity" />
      </Parameters>
      <Docs>
        <param name="a">An entity.</param>
        <param name="b">An entity.</param>
        <summary>Tests whether two entities are not equal.</summary>
        <returns>The negation of the result of applying the equality operator.</returns>
        <remarks>See the equality operator.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public override string Uri { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUri">
      <MemberSignature Language="C#" Value="public static string ValidateUri (string uri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The URI to validate.</param>
        <summary>Validates that a string is a legitimate IRI-Reference, i.e. a legitimate URI in RDF.</summary>
        <returns>
          <see langword="null" /> if <paramref name="uri" /> is valid, otherwise a string describing the problem.</returns>
        <remarks>When creating an Entity instance, the string passed into the constructor as the URI is not validated (because validation is a somewhat expensive process). It is the caller's responsibility to validate the URI using this method.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.2</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
