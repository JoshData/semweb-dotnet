<Type Name="SparqlEngine" FullName="SemWeb.Query.SparqlEngine">
  <TypeSignature Language="C#" Value="public class SparqlEngine : SemWeb.Query.Query" />
  <AssemblyInfo>
    <AssemblyName>SemWeb.Sparql</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.7.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SemWeb.Query.Query</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A SPARQL query engine.</summary>
    <remarks>
      <para>This SPARQL engine parses and evaluates a SPARQL language query against any <see cref="T:SemWeb.SelectableSource" /> or <see cref="T:SemWeb.QueryableSource" />. If the queried data source is a <see cref="T:SemWeb.QueryableSource" />, the Query method is used where possible. Otherwise, query execution falls back to calling <see cref="T:SemWeb.SelectableSource" />'s Contains and Select methods.</para>
      <para>This class is a fork of the SPARQL engine library at http://sparql.sourceforge.net/ by Ryan Levering, version 0.8. The upstream library has been heavily modified, however.</para>
      <example>
        <para>This example runs a SELECT query on a data source and writes the results as XML to standard output.</para>
        <code lang="C#">MemoryStore datamodel = new MemoryStore(new RdfXmlReader("rdfdata.rdf"));

string sparqlQuery = "PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;\n"
                           + "PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;\n"
                           + "SELECT * WHERE { ?person rdf:type foaf:Agent . \n"
                           + "?person foaf:name ?name . }";

SparqlEngine query = new SparqlEngine(sparqlQuery);
query.Run(datamodel, Console.Out).  </code>
      </example>
      <para>Although this example sends the results to a stream, the results can be processed programmatically by passing a <see cref="T:SemWeb.Query.QueryResultSink" /> instead of a TextWriter.</para>
      <para>Something must be said about the handling of FROM, FROM NAMED, and GRAPH clauses in queries. The FROM clause is used to specify the set of graphs that combined make up the default dataset, which is what triples in the query are normally (that is, outside of a GRAPH clause) matched against. FROM clauses are essentially ignored by the SPARQL engine. It is up to the caller to check if any FROM clauses are specified using <see cref="M:SemWeb.Query.SparqlEngine.GetDefaultDatasets" /> and passing the right data source to the SPARQL engine as appropriate. Outside of a GRAPH clause, the triples in a query are compared against the data source with the <see cref="F:SemWeb.Statement.Meta" /> or <see cref="F:SemWeb.SelectFilter.Meta" /> field set to <see cref="F:SemWeb.Statement.DefaultMeta" />, the default value when no meta or provenance information is associated with a statement.</para>
      <para>Triples inside of a GRAPH clause with an explicit URI, such as "GRAPH &lt;....uri...&gt; { ...graph pattern... }", are matched against the data source by passing the URI specified in the graph clause as the value of <see cref="F:SemWeb.Statement.Meta" /> or as a one-element array in <see cref="F:SemWeb.SelectFilter.Meta" />.</para>
      <para>In GRAPH clauses with graph variables, such as "GRAPH ?g { ...graph pattern... }", the potential values of the graph variable can sometimes be inferred from previous statements referencing the graph variable that were already evaluated during the processing of the query. Failing that, the potential values of graph variables are drawn from the set of FROM NAMED graphs, if any were specified. If any potential values for the graph variable are known, they are passed together in the <see cref="F:SemWeb.SelectFilter.Meta" /> field in calls to Contains, Select, or (if there is just one such value) Query on the data source, or if there is more than one value then in a call to Query the <see cref="F:SemWeb.Statement.Meta" /> field is set to a new <see cref="T:SemWeb.Variable" /> and <see cref="F:SemWeb.Query.QueryOptions.VariableKnownValues" /> is filled in with the potential values for the variable </para>
      <para>In GRAPH clauses with graph variables whose values are not known at all, null is passed as the value of <see cref="F:SemWeb.SelectFilter.Meta" />, or in a call to <see cref="M:SemWeb.QueryableSource.Query(SemWeb.Statement[],SemWeb.Query.QueryOptions,SemWeb.Query.QueryResultSink)" /> the <see cref="F:SemWeb.Statement.Meta" />  field is set to a new <see cref="T:SemWeb.Variable" />.</para>
      <para>Since, for instance, it is impossible to set the Meta field of statements in RDF/XML, it is recommended in order to process GRAPH clauses to implement your own <see cref="T:SemWeb.SelectableSource" /> to pass as the data source for queries that will inspect the Meta field and pass off calls to Contains and Select to the correct source graph.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SparqlEngine (System.IO.TextReader query);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="query" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="query">A TextReader containing the SPARQL query.</param>
        <summary>Initialized the SPARQL query from a TextReader.</summary>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SparqlEngine (string query);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">The SPARQL query.</param>
        <summary>Initializes the SPARQL query from a string.</summary>
        <remarks>None.</remarks>
        <exception cref="T:SemWeb.Query.QueryFormatException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.#ctor(System.String)" />, <see cref="M:SemWeb.Query.SparqlEngine.#ctor(System.String)" />, <see cref="M:SemWeb.Query.SparqlEngine.#ctor(System.String)" />, <see cref="M:SemWeb.Query.SparqlEngine.#ctor(System.String)" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AddExternalFunction">
      <MemberSignature Language="C#" Value="public void AddExternalFunction (SemWeb.Query.RdfFunction function);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="SemWeb.Query.RdfFunction" />
      </Parameters>
      <Docs>
        <param name="function">An object implementing an external function.</param>
        <summary>Registers an external function that can be used in FILTER clauses.</summary>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AllowPersistBNodes">
      <MemberSignature Language="C#" Value="public bool AllowPersistBNodes;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Ask">
      <MemberSignature Language="C#" Value="public bool Ask (SemWeb.SelectableSource source);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
      </Parameters>
      <Docs>
        <param name="source">The data source to query.</param>
        <summary>Executes an ASK query on the given data source and returns the result of the query as a boolean.</summary>
        <returns>A boolean value giving the result of the ASK query.</returns>
        <remarks>None.</remarks>
        <exception cref="T:SemWeb.Query.QueryExecutionException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Ask(SemWeb.SelectableSource)" /></exception>
        <exception cref="T:System.InvalidOperationException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Ask(SemWeb.SelectableSource)" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Ask">
      <MemberSignature Language="C#" Value="public void Ask (SemWeb.SelectableSource source, System.IO.TextWriter output);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="source">The data source to query.</param>
        <param name="output">The <see cref="T:System.IO.TextWriter" /> to output the results to in the SPARQL Results XML output format.</param>
        <summary>Executes an ASK query on the given data source and outputs the result of the query in the SPARQL results format to a TextWriter.</summary>
        <remarks>This method can also be called through <see cref="M:SemWeb.Query.Query.Run(SemWeb.SelectableSource,System.IO.TextWriter)" />.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="public void Construct (SemWeb.SelectableSource source, SemWeb.StatementSink sink);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="sink" Type="SemWeb.StatementSink" />
      </Parameters>
      <Docs>
        <param name="source">The data source to query.</param>
        <param name="sink">The <see cref="T:SemWeb.StatementSink" /> to send the constructed statements to.</param>
        <summary>Executes a CONSTRUCT query on the given data source and sends the constructed statements to a StatementSink.</summary>
        <remarks>None.</remarks>
        <exception cref="T:SemWeb.Query.QueryExecutionException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Construct(SemWeb.SelectableSource,SemWeb.StatementSink)" /></exception>
        <exception cref="T:System.InvalidOperationException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Construct(SemWeb.SelectableSource,SemWeb.StatementSink)" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="public void Construct (SemWeb.SelectableSource source, System.IO.TextWriter output);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="source">The data source to query.</param>
        <param name="output">The <see cref="T:System.IO.TextWriter" /> to output the results to in the SPARQL Results XML output format.</param>
        <summary>Executes a CONSTRUCT query on the given data source and outputs the result of the query in the SPARQL results format to a TextWriter.</summary>
        <remarks>This method can also be called through <see cref="M:SemWeb.Query.Query.Run(SemWeb.SelectableSource,System.IO.TextWriter)" />.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Describe">
      <MemberSignature Language="C#" Value="public void Describe (SemWeb.SelectableSource source, SemWeb.StatementSink sink);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="sink" Type="SemWeb.StatementSink" />
      </Parameters>
      <Docs>
        <param name="source">The data source to query.</param>
        <param name="sink">The <see cref="T:SemWeb.StatementSink" /> to send the constructed statements to.</param>
        <summary>Executes a DESCRIBE query on the given data source and sends the constructed statements to a StatementSink.</summary>
        <remarks>None.</remarks>
        <exception cref="T:SemWeb.Query.QueryExecutionException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Describe(SemWeb.SelectableSource,SemWeb.StatementSink)" /></exception>
        <exception cref="T:System.InvalidOperationException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Describe(SemWeb.SelectableSource,SemWeb.StatementSink)" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Describe">
      <MemberSignature Language="C#" Value="public void Describe (SemWeb.SelectableSource source, System.IO.TextWriter output);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="source">The data source to query.</param>
        <param name="output">The <see cref="T:System.IO.TextWriter" /> to output the results to in the SPARQL Results XML output format.</param>
        <summary>Executes a DESCRIBE query on the given data source and outputs the result of the query in the SPARQL results format to a TextWriter.</summary>
        <remarks>This method can also be called through <see cref="M:SemWeb.Query.Query.Run(SemWeb.SelectableSource,System.IO.TextWriter)" />.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetDefaultDatasets">
      <MemberSignature Language="C#" Value="public string[] GetDefaultDatasets ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExplanation">
      <MemberSignature Language="C#" Value="public override string GetExplanation ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamedDatasets">
      <MemberSignature Language="C#" Value="public string[] GetNamedDatasets ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryPrefixes">
      <MemberSignature Language="C#" Value="public SemWeb.NamespaceManager GetQueryPrefixes ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>SemWeb.NamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a NamespaceManager containing all of the PREFIX definitions used in the query.</summary>
        <returns>A NamespaceManager.</returns>
        <remarks>None.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public override string MimeType { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.get_MimeType" />, <see cref="M:SemWeb.Query.SparqlEngine.set_MimeType(System.String)" />, <see cref="M:SemWeb.Query.SparqlEngine.set_MimeType(System.String)" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public override void Run (SemWeb.SelectableSource source, SemWeb.Query.QueryResultSink resultsink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="resultsink" Type="SemWeb.Query.QueryResultSink" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="resultsink">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:SemWeb.Query.QueryExecutionException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Run(SemWeb.SelectableSource,SemWeb.Query.QueryResultSink)" /></exception>
        <exception cref="T:System.InvalidOperationException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Run(SemWeb.SelectableSource,SemWeb.Query.QueryResultSink)" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public override void Run (SemWeb.SelectableSource source, System.IO.TextWriter output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Run(SemWeb.SelectableSource,System.IO.TextWriter)" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (SemWeb.SelectableSource source, SemWeb.Query.QueryResultSink sink);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="sink" Type="SemWeb.Query.QueryResultSink" />
      </Parameters>
      <Docs>
        <param name="source">The data source to query.</param>
        <param name="sink">The <see cref="T:SemWeb.Query.QueryResultSink" /> to send the resulting variable bindings to.</param>
        <summary>Executes a SELECT query on the given data source and sends the resulting variable bindings to a QueryResultSink.</summary>
        <remarks>None.</remarks>
        <exception cref="T:System.InvalidOperationException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Select(SemWeb.SelectableSource,SemWeb.Query.QueryResultSink)" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (SemWeb.SelectableSource source, System.IO.TextWriter output);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SemWeb.SelectableSource" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="source">The data source to query.</param>
        <param name="output">The <see cref="T:System.IO.TextWriter" /> to output the results to in the SPARQL Results XML output format.</param>
        <summary>Executes a SELECT query on the given data source and outputs the result of the query in the SPARQL results format to a TextWriter.</summary>
        <remarks>This method can also be called through <see cref="M:SemWeb.Query.Query.Run(SemWeb.SelectableSource,System.IO.TextWriter)" />.</remarks>
        <exception cref="T:System.InvalidOperationException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.Select(SemWeb.SelectableSource,System.IO.TextWriter)" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public SemWeb.Query.SparqlEngine.QueryType Type { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>SemWeb.Query.SparqlEngine+QueryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of the query.</summary>
        <value>The type of the query: SELECT, DESCRIBE, CONSTRUCT, or ASK.</value>
        <remarks>None.</remarks>
        <exception cref="T:System.NotSupportedException">To be added; from: <see cref="M:SemWeb.Query.SparqlEngine.get_Type" /></exception>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.7.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
