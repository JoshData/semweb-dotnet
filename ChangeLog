	* Renamed QueryEngine to GraphMatch since it does a very limited type
	  of query, and made the API cleaner.
	* Added SemWeb.Query.Sparql, a SPARQL query engine powered by
	  http://sourceforge.net/projects/sparql by Ryan Levering,
	  and deleted my own barely-functional SPARQL parser.
	* GraphMatch only allows anonymous nodes to be variables now, and the
	  N3Reader reads variables as anonymous nodes, but remembers their
	  names.
	* Removed the SelectPartialFilter class and the overloads for
	  Store.Select that took one of those as an argument.
	* The overloads for Select that returned a MemoryStore rather
	  than taking a StatementSink as an argument now return a
	  SelectResult which lazy-loads the results into a MemoryStore
	  if the statements are requested by IEnumerable.  Otherwise it
	  can be used as a StatementSource and passed off to other
	  methods so it won't need to load all of the statements into memory.
	* SQLStore: Clear the store by dropping the tables, rather than
	  deleting all of the rows.

2005-07-24 Version 0.503

	* GetHashCode() for anonmyous resources used to return
	  zero, which made hashtables of anonymous resources
	  very slow.  Now it returns Object.GetHashCode().
	* Fixes in the query engine, SQL store, and N3Reader.
	* Statements now have a default non-null Meta field. The
	  default is Statement.DefaultMeta.
	* Something has made SQLite stores much slower.
	* RdfXmlReader respects the RdfReader.Meta property.
	* MemoryStore.FindEntities wasn't working.
	* The SPARQL parser wasn't reading quoted literals or
	  numbers properly.

2005-07-01 Version 0.502

	* More bug fixes.
	* Query engine totally rewritten, which will
	  make much more sense once its documented.
	* Store.Contains now accepts statement templates.

2005-06-20 Version 0.501

	Just lots of bugs fixed.
	* New API to replace one statement with another statement in a store.
	* New API to test whether a statement template matches a statement.
	* The Resource class now has its == and != operators overloaded.
	* Store.CreateForInput/Output now accepts 'ntriples' 'nt' and 'turtle'.
	* Store.SelectSubjects signature change.
	* Select(Statement[]) for SQL stores works now.
	* SQLLite has a bug in how they handle LEFT JOIN.  SQL store now
	  works around this.
	* SQL stores now index on the meta field.
	* FindEntities works now.
	* N3Writer can output in NTriples, Turtle, or full N3 mode.
	* The query engine works now, and it's better optimized (but it wasn't working before anyway).
	* Xml (Sparql) query result output now has nice indentation.

2005-06-10 Version 0.5

	* First release.

